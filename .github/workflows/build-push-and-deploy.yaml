name: Build, Push and Deploy

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build_and_push:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build_docker_image.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Globals
        shell: bash
        run: |
          echo "TRIVY_VERSION=0.65.0" >> "$GITHUB_ENV"
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"

      - name: Build Docker Image
        id: build_docker_image
        run: |
          DOCKER_IMAGE=jonny5592/blog:${SHORT_SHA}

          echo "Building Docker Image ${DOCKER_IMAGE}"
          docker build . -t ${DOCKER_IMAGE}

          echo "image=$DOCKER_IMAGE" >> "$GITHUB_OUTPUT"

      - name: Scan Docker Image
        run: |
          IMAGE="${{ steps.build_docker_image.outputs.image }}"

          docker run --rm \
          -v /var/run/docker.sock:/var/run/docker.sock \
          aquasec/trivy:${TRIVY_VERSION} image \
            --skip-dirs /usr/local/lib,/usr/src/app,/opt,/app \
            --scanners vuln \
            --severity CRITICAL,HIGH \
            --exit-code 1 \
            ${IMAGE}

      - name: Generate Docker SBOM
        id: generate_docker_sbom
        if: always()
        run: |
          IMAGE="${{ steps.build_docker_image.outputs.image }}"
          SBOM_FILE=sbom-image-${SHORT_SHA}.cdx.json

          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v "${{ github.workspace }}:/project" \
            aquasec/trivy:${TRIVY_VERSION} image \
              --format cyclonedx \
              --scanners vuln \
              --output /project/${SBOM_FILE} \
              ${IMAGE}

          echo "sbom_file=$SBOM_FILE" >> "$GITHUB_OUTPUT"

      - name: Scan Dependencies
        id: scan_dependencies
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/project" \
            aquasec/trivy:${TRIVY_VERSION} fs \
              --severity CRITICAL,HIGH \
              --scanners vuln \
              --exit-code 1 \
              /project

      - name: Generate Dependencies SBOM
        id: generate_deps_sbom
        if: always()
        run: |
          SBOM_FILE=sbom-deps-${SHORT_SHA}.cdx.json

          docker run --rm \
            -v "${{ github.workspace }}:/project" \
            aquasec/trivy:${TRIVY_VERSION} fs \
              --format cyclonedx \
              --scanners vuln \
              --output /project/${SBOM_FILE} \
              /project

          echo "sbom_file=$SBOM_FILE" >> "$GITHUB_OUTPUT"

      - name: Upload SBOM artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sboms-${{ env.SHORT_SHA }}
          path: |
            ${{ steps.generate_docker_sbom.outputs.sbom_file }}
            ${{ steps.generate_deps_sbom.outputs.sbom_file }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push to DockerHub
        run: |
          IMAGE="${{ steps.build_docker_image.outputs.image }}"

          docker push ${IMAGE}

  deploy:
    runs-on: self-hosted
    if: github.event_name != 'pull_request'
    needs: build_and_push
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Pull Docker Image and Run Docker Container
        run: |
          IMAGE="${{ needs.build_and_push.outputs.image }}"

          docker pull ${IMAGE}
          docker stack deploy -c docker-compose.yml --prune --with-registry-auth blog
